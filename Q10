#include <iostream>

using namespace std;

struct node{ int data;
node* next;
};

struct node* head;


node* createll(int val)
{  struct node*temp=new node();
 temp->data=val;
 temp->next=NULL;

    if(head==NULL)
    {head=temp;
    }
    else
    {struct node* ctr=head;
      while(ctr->next!=NULL)  
        ctr=ctr->next;
        ctr->next=temp;
    }
   return(head);
}
 void display(node *n) {  

    struct node *curr = n;  

    if(n == NULL) {  
        cout<<"List is empty\n";  
        return;  
    }  
    cout<<"Nodes of linked list: \n";  
    while(curr != NULL) {  

        printf("%d ", curr->data);  
        curr = curr->next;  
    }     
}

node *revlist(node *head) 
{node*curr=head,*prev=NULL,*after=NULL;
while(curr!=NULL)
{after=curr->next;
curr->next=prev;
prev=curr;
curr=after;
}
return(prev);
    
}

node* middlell(node *head)
{node* fp=head,*sp=head;
 while(fp->next!=NULL)   
  { sp=sp->next;
    fp=fp->next->next;  
      
  }  
   return(sp); 
}

bool ispalindrome(node* head)
{ struct node*m=middlell(head);
struct node *tailend=revlist(m);
while(tailend!=head)
{ if(tailend->data!=head->data)
      return(0);
      else
      {tailend=tailend->next;
      head=head->next;
      }
}    
  return(1);
    
}


int main()
{ int x,n;
 bool ans;
 struct node* res;
  cout<<"Enter number of values \n";
  cin>>n;
    cout<<"Enter values";
  for(int i=0;i<n;i++)
  {cin>>x;
     res=createll(x); 
  }
  display(res);
 ans=ispalindrome(res);
 if(ans==1)
 cout<<"It is a palindrome";
 else
  cout<<"It is not a palindrome";
  
}
