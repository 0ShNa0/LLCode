#include <iostream>
#include <unordered_set>
using namespace std;
class node
{
public:
    int data;
    node* next;
      node(int d)
    {
      data = d;
      next = NULL;
    }
};
 
void commons(node* n1, node* n2)
{
    unordered_set<node*> hs;
    while (n1 != NULL) {
        hs.insert(n1);
        n1 = n1->next;
    }
    while (n2) {
        if (hs.find(n2) != hs.end()) {
            cout << n2->data << endl;
            break;
        }
        n2 = n2->next;
    }
}
 

void display(node* n)
{
      node* curr = n;
      while(curr != NULL){
      cout << curr->data << " ";
      curr = curr->next;
    }
      cout << endl;
}
   
int main()
{
     
     node* n1 = new node(19);
     n1->next = new node(2);
     n1->next->next = new node(3);
     n1->next->next->next = new node(4);
     n1->next->next->next->next = new node(5);
     n1->next->next->next->next->next = new node(6);
     n1->next->next->next->next->next->next = new node(7);
    
     node* n2 = new node(10);
     n2->next = new node(9);
     n2->next->next = new node(8);
     n2->next->next->next = n1->next->next->next;
     display(n1);
     display(n2);
           
      commons(n1,n2);
       
       return 0;
}
